---
- name: jenkins | install_jenkins | Set Jenkins bootstrap credential
  set_fact:
    JENKINS_BOOTSTRAP_USERNAME: jenkins_bootstrap_user
    JENKINS_BOOTSTRAP_PASSWORD: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=30') }}"

- name: jenkins | install_jenkins | Install Jenkins
  include_tasks: install_jenkins_on_{{ ansible_os_family }}.yml

- name: jenkins | install_jenkins | Wait for Jenkins to be ready
  uri:
    url: "http://localhost:8080/cli/"
    status_code: 200
  register: get_jenkins_cli_result
  until: get_jenkins_cli_result.status == 200
  retries: 10
  delay: 20

- name: jenkins | install_jenkins | Install Jenkins CLI
  get_url:
    url: "http://localhost:8080/jnlpJars/jenkins-cli.jar"
    dest: "/opt/jenkins-cli.jar"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or '304' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 10

- name: jenkins | install_jenkins | Create jenkins CLI to install plugins
  template:
    src: jenkins.j2
    dest: /usr/bin/jenkins
    mode: 0755
    force: yes
  vars:
    JENKINS_AUTH_USERNAME: "{{ JENKINS_BOOTSTRAP_USERNAME }}"
    JENKINS_AUTH_PASSWORD: "{{ JENKINS_BOOTSTRAP_PASSWORD }}"
# java -jar jenkins-plugin-manager-2.12.6.jar --war /usr/share/java/jenkins.war -d /var/lib/jenkins/plugins --plugins job-dsl:1.78.1 --verbose

- name: jenkins | install_jenkins | Install Jenkins Plugin CLI Tool
  get_url:
    url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.12.6/jenkins-plugin-manager-2.12.6.jar
    dest: /var/lib/jenkins/jenkins-plugin-manager-2.12.6.jar

# plugins don't play nice with each other if we don't pin the versions, trying to version to versions that were available in 2021 December
- name: jenkins | install_jenkins | Install Jenkins Plugins
  shell: >
    /usr/bin/java -jar /var/lib/jenkins/jenkins-plugin-manager-2.12.6.jar --war /usr/share/java/jenkins.war -d /var/lib/jenkins/plugins --plugins {{ item }} --verbose
  with_items:
    - ansible:1.1
    - authorize-project:1.4.0
    - build-timeout:1.20
    - blueocean:1.25.0
    - bootstrap5-api:5.1.3-4
    - configuration-as-code:1.55.1
    - credentials-binding:1.27.1
    - email-ext:2.86
    - ghprb:1.16-8
    - git:4.10.2
    - github-branch-source:2.11.4
    - github-oauth:0.37
    - htmlpublisher:1.28
    - job-dsl:1.78.3
    - ldap:2.7
    - mailer:1.34.2
    - matrix-auth:3.0
    - pam-auth:1.6.1
    - pipeline-github-lib:1.0
    - pipeline-stage-view:2.20
    - rebuild:1.34
    - ssh-slaves:1.33.0
    - timestamper:1.15
    - workflow-aggregator:2.6
    - workflow-cps:2646.v6ed3b5b01ff1
    - workflow-job:1145.v7f2433caa07
    - ws-cleanup:0.39

- name: jenkins | install_jenkins | Remove Jenkins security bootstrap scripts
  file:
    path: /var/lib/jenkins/init.groovy.d/basic-security.groovy
    state: absent

- name: jenkins | install_jenkins | Create Jenkins ansible_playbooks directory
  file:
    path: /var/lib/jenkins/ansible_playbooks
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755
  when: false

- name: jenkins | install_jenkins | Create Jenkins config as code directory
  file:
    path: /var/lib/jenkins/casc_configs
    state: directory
    owner: jenkins
    group: jenkins
    mode: 0755

- name: jenkins | install_jenkins | Create Jenkins config as code file
  template:
    src: config_jenkins_as_code.yaml.j2
    dest: /var/lib/jenkins/casc_configs/config_jenkins_as_code.yaml
    owner: jenkins
    group: jenkins
    mode: 0644

- name: jenkins | install_jenkins | Copy pipeline jobs
  template:
    src: "{{ item }}.j2"
    dest: "/var/lib/jenkins/casc_configs/{{ item }}"
    owner: jenkins
    group: jenkins
    mode: 0755
  with_items:
    - harvester_vagrant_installation_test.groovy

- name: jenkins | install_jenkins | Restart jenkins
  service:
    name: jenkins
    state: restarted

- name: jenkins | install_jenkins | Create jenkins CLI
  template:
    src: jenkins.j2
    dest: /usr/bin/jenkins
    mode: 0755
    force: yes
  vars:
    JENKINS_AUTH_USERNAME: "{{ JENKINS_ADMIN_USERNAME }}"
    JENKINS_AUTH_PASSWORD: "{{ JENKINS_ADMIN_PASSWORD }}"
